<!DOCTYPE html>
<html lang="th">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏•‡∏Ç‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏≠‡∏≠‡∏Å - ‡πÇ‡∏£‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏™‡∏´‡∏£‡∏≤‡∏©‡∏é‡∏£‡πå‡∏£‡∏±‡∏á‡∏™‡∏§‡∏©‡∏î‡∏¥‡πå</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://www.gstatic.com/firebasejs/9.22.0/firebase-app-compat.js"></script>
    <script src="https://www.gstatic.com/firebasejs/9.22.0/firebase-firestore-compat.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.18.5/xlsx.full.min.js"></script>
    <style>
        @import url('https://fonts.googleapis.com/css2?family=Sarabun:wght@300;400;500;600;700&display=swap');
        body { font-family: 'Sarabun', sans-serif; }
    </style>
</head>
<body class="bg-gradient-to-br from-blue-50 to-indigo-100 min-h-screen">
    <!-- Header -->
    <div class="bg-white shadow-lg">
        <div class="max-w-6xl mx-auto px-6 py-4">
            <div class="flex items-center space-x-4">
                <div class="w-12 h-12 bg-blue-600 rounded-full flex items-center justify-center">
                    <span class="text-white font-bold text-lg">üìÑ</span>
                </div>
                <div>
                    <h1 class="text-2xl font-bold text-gray-800">‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏•‡∏Ç‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏≠‡∏≠‡∏Å</h1>
                    <p class="text-gray-600">‡πÇ‡∏£‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏™‡∏´‡∏£‡∏≤‡∏©‡∏é‡∏£‡πå‡∏£‡∏±‡∏á‡∏™‡∏§‡∏©‡∏î‡∏¥‡πå</p>
                </div>
            </div>
        </div>
    </div>

    <div class="max-w-6xl mx-auto px-6 py-8">
        <!-- Form Section -->
        <div class="bg-white rounded-xl shadow-lg p-8 mb-8">
            <h2 class="text-xl font-semibold text-gray-800 mb-6">‡∏Ç‡∏≠‡πÄ‡∏•‡∏Ç‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏≠‡∏≠‡∏Å</h2>
            
            <form id="documentForm" class="space-y-6">
                <!-- ‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á -->
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-2">‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á *</label>
                    <input type="text" id="title" required class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent" placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á">
                </div>

                <!-- ‡∏à‡∏≤‡∏Å -->
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-2">‡∏à‡∏≤‡∏Å *</label>
                    <select id="fromSelect" required class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent">
                        <option value="">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ú‡∏π‡πâ‡∏™‡πà‡∏á</option>
                        <option value="‡∏ú‡∏π‡πâ‡∏≠‡∏≥‡∏ô‡∏ß‡∏¢‡∏Å‡∏≤‡∏£‡πÇ‡∏£‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏™‡∏´‡∏£‡∏≤‡∏©‡∏é‡∏£‡πå‡∏£‡∏±‡∏á‡∏™‡∏§‡∏©‡∏î‡∏¥‡πå">‡∏ú‡∏π‡πâ‡∏≠‡∏≥‡∏ô‡∏ß‡∏¢‡∏Å‡∏≤‡∏£‡πÇ‡∏£‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏™‡∏´‡∏£‡∏≤‡∏©‡∏é‡∏£‡πå‡∏£‡∏±‡∏á‡∏™‡∏§‡∏©‡∏î‡∏¥‡πå</option>
                        <option value="other">‡∏≠‡∏∑‡πà‡∏ô‡πÜ</option>
                    </select>
                    <input type="text" id="fromOther" class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent mt-3 hidden" placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡∏™‡πà‡∏á">
                </div>

                <!-- ‡∏ñ‡∏∂‡∏á -->
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-2">‡∏ñ‡∏∂‡∏á *</label>
                    <select id="toSelect" required class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent">
                        <option value="">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö</option>
                        <option value="‡∏ú‡∏π‡πâ‡∏≠‡∏≥‡∏ô‡∏ß‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏≥‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡πÄ‡∏Ç‡∏ï‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡∏°‡∏±‡∏ò‡∏¢‡∏°‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡∏ô‡∏Ñ‡∏£‡∏û‡∏ô‡∏°">‡∏ú‡∏π‡πâ‡∏≠‡∏≥‡∏ô‡∏ß‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏≥‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡πÄ‡∏Ç‡∏ï‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡∏°‡∏±‡∏ò‡∏¢‡∏°‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡∏ô‡∏Ñ‡∏£‡∏û‡∏ô‡∏°</option>
                        <option value="other">‡∏≠‡∏∑‡πà‡∏ô‡πÜ</option>
                    </select>
                    <input type="text" id="toOther" class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent mt-3 hidden" placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö">
                </div>

                <!-- ‡∏ú‡∏π‡πâ‡∏Ç‡∏≠‡πÄ‡∏•‡∏Ç -->
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-2">‡∏ú‡∏π‡πâ‡∏Ç‡∏≠‡πÄ‡∏•‡∏Ç *</label>
                    <input type="text" id="requester" required class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent" placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡∏Ç‡∏≠‡πÄ‡∏•‡∏Ç">
                </div>

                <!-- ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏ -->
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-2">‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏‡∏≠‡∏∑‡πà‡∏ô‡πÜ</label>
                    <textarea id="notes" rows="3" class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent" placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏ (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)"></textarea>
                </div>

                <button type="submit" class="w-full bg-blue-600 hover:bg-blue-700 text-white font-semibold py-3 px-6 rounded-lg transition duration-200">
                    ‡∏Ç‡∏≠‡πÄ‡∏•‡∏Ç‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠
                </button>
            </form>
        </div>

        <!-- History Section -->
        <div class="bg-white rounded-xl shadow-lg p-8">
            <div class="flex justify-between items-center mb-6">
                <div class="flex items-center space-x-4">
                    <h2 class="text-xl font-semibold text-gray-800">‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏Ç‡∏≠‡πÄ‡∏•‡∏Ç‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠</h2>
                    <select id="yearFilter" class="px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent">
                        <option value="">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏õ‡∏µ</option>
                    </select>
                </div>
                <div class="space-x-3">
                    <button id="downloadBtn" class="bg-green-600 hover:bg-green-700 text-white px-4 py-2 rounded-lg transition duration-200">
                        üìä ‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î Excel
                    </button>
                    <button id="editBtn" class="bg-orange-600 hover:bg-orange-700 text-white px-4 py-2 rounded-lg transition duration-200">
                        ‚úèÔ∏è ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
                    </button>
                </div>
            </div>
            
            <div class="overflow-x-auto">
                <table class="w-full border-collapse">
                    <thead>
                        <tr class="bg-gray-50">
                            <th class="border border-gray-300 px-4 py-3 text-left">‡πÄ‡∏•‡∏Ç‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠</th>
                            <th class="border border-gray-300 px-4 py-3 text-left">‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á</th>
                            <th class="border border-gray-300 px-4 py-3 text-left">‡∏à‡∏≤‡∏Å</th>
                            <th class="border border-gray-300 px-4 py-3 text-left">‡∏ñ‡∏∂‡∏á</th>
                            <th class="border border-gray-300 px-4 py-3 text-left">‡∏ú‡∏π‡πâ‡∏Ç‡∏≠‡πÄ‡∏•‡∏Ç</th>
                            <th class="border border-gray-300 px-4 py-3 text-left">‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà</th>
                            <th id="actionColumn" class="border border-gray-300 px-4 py-3 text-left hidden">‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£</th>
                        </tr>
                    </thead>
                    <tbody id="historyTable">
                        <tr>
                            <td colspan="6" class="border border-gray-300 px-4 py-8 text-center text-gray-500">
                                ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•...
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    <!-- Document Number Popup -->
    <div id="documentPopup" class="fixed inset-0 bg-black bg-opacity-50 hidden items-center justify-center z-50">
        <div class="bg-white rounded-xl p-8 max-w-md w-full mx-4 shadow-2xl">
            <div class="text-center mb-6">
                <div class="w-16 h-16 bg-green-100 rounded-full flex items-center justify-center mx-auto mb-4">
                    <span class="text-green-600 text-2xl">‚úÖ</span>
                </div>
                <h3 class="text-xl font-semibold text-gray-800">‡πÄ‡∏•‡∏Ç‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì</h3>
            </div>
            
            <div class="bg-blue-50 rounded-lg p-4 mb-6">
                <div class="text-center">
                    <div class="text-2xl font-bold text-blue-600 mb-2" id="documentNumber"></div>
                    <div class="text-sm text-gray-600">‡πÄ‡∏•‡∏Ç‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏≠‡∏≠‡∏Å</div>
                </div>
            </div>
            
            <div class="space-y-3 text-sm" id="documentDetails"></div>
            
            <button id="closePopup" class="w-full bg-blue-600 hover:bg-blue-700 text-white font-semibold py-3 px-6 rounded-lg transition duration-200 mt-6">
                ‡∏õ‡∏¥‡∏î
            </button>
        </div>
    </div>

    <!-- Password Modal -->
    <div id="passwordModal" class="fixed inset-0 bg-black bg-opacity-50 hidden items-center justify-center z-50">
        <div class="bg-white rounded-xl p-8 max-w-sm w-full mx-4 shadow-2xl">
            <h3 class="text-lg font-semibold text-gray-800 mb-4">‡∏Å‡∏£‡∏≠‡∏Å‡∏£‡∏´‡∏±‡∏™‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà</h3>
            <input type="password" id="staffPassword" class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent mb-4" placeholder="‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô">
            <div class="flex space-x-3">
                <button id="cancelPassword" class="flex-1 bg-gray-300 hover:bg-gray-400 text-gray-700 py-2 px-4 rounded-lg transition duration-200">‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å</button>
                <button id="confirmPassword" class="flex-1 bg-blue-600 hover:bg-blue-700 text-white py-2 px-4 rounded-lg transition duration-200">‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô</button>
            </div>
        </div>
    </div>

    <!-- Edit Modal -->
    <div id="editModal" class="fixed inset-0 bg-black bg-opacity-50 hidden items-center justify-center z-50">
        <div class="bg-white rounded-xl p-8 max-w-2xl w-full mx-4 shadow-2xl max-h-[90vh] overflow-y-auto">
            <h3 class="text-xl font-semibold text-gray-800 mb-6">‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠</h3>
            
            <form id="editForm" class="space-y-4">
                <input type="hidden" id="editDocId">
                
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-2">‡πÄ‡∏•‡∏Ç‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠</label>
                    <input type="text" id="editDocNumber" readonly class="w-full px-4 py-3 border border-gray-300 rounded-lg bg-gray-100">
                </div>
                
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-2">‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á *</label>
                    <input type="text" id="editTitle" required class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent">
                </div>

                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-2">‡∏à‡∏≤‡∏Å *</label>
                    <select id="editFromSelect" required class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent">
                        <option value="">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ú‡∏π‡πâ‡∏™‡πà‡∏á</option>
                        <option value="‡∏ú‡∏π‡πâ‡∏≠‡∏≥‡∏ô‡∏ß‡∏¢‡∏Å‡∏≤‡∏£‡πÇ‡∏£‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏™‡∏´‡∏£‡∏≤‡∏©‡∏é‡∏£‡πå‡∏£‡∏±‡∏á‡∏™‡∏§‡∏©‡∏î‡∏¥‡πå">‡∏ú‡∏π‡πâ‡∏≠‡∏≥‡∏ô‡∏ß‡∏¢‡∏Å‡∏≤‡∏£‡πÇ‡∏£‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏™‡∏´‡∏£‡∏≤‡∏©‡∏é‡∏£‡πå‡∏£‡∏±‡∏á‡∏™‡∏§‡∏©‡∏î‡∏¥‡πå</option>
                        <option value="other">‡∏≠‡∏∑‡πà‡∏ô‡πÜ</option>
                    </select>
                    <input type="text" id="editFromOther" class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent mt-3 hidden">
                </div>

                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-2">‡∏ñ‡∏∂‡∏á *</label>
                    <select id="editToSelect" required class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent">
                        <option value="">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö</option>
                        <option value="‡∏ú‡∏π‡πâ‡∏≠‡∏≥‡∏ô‡∏ß‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏≥‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡πÄ‡∏Ç‡∏ï‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡∏°‡∏±‡∏ò‡∏¢‡∏°‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡∏ô‡∏Ñ‡∏£‡∏û‡∏ô‡∏°">‡∏ú‡∏π‡πâ‡∏≠‡∏≥‡∏ô‡∏ß‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏≥‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡πÄ‡∏Ç‡∏ï‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡∏°‡∏±‡∏ò‡∏¢‡∏°‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡∏ô‡∏Ñ‡∏£‡∏û‡∏ô‡∏°</option>
                        <option value="other">‡∏≠‡∏∑‡πà‡∏ô‡πÜ</option>
                    </select>
                    <input type="text" id="editToOther" class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent mt-3 hidden">
                </div>

                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-2">‡∏ú‡∏π‡πâ‡∏Ç‡∏≠‡πÄ‡∏•‡∏Ç *</label>
                    <input type="text" id="editRequester" required class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent">
                </div>

                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-2">‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏‡∏≠‡∏∑‡πà‡∏ô‡πÜ</label>
                    <textarea id="editNotes" rows="3" class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"></textarea>
                </div>

                <div class="flex space-x-3 pt-4">
                    <button type="button" id="cancelEdit" class="flex-1 bg-gray-300 hover:bg-gray-400 text-gray-700 py-3 px-4 rounded-lg transition duration-200">‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å</button>
                    <button type="button" id="deleteDoc" class="bg-red-600 hover:bg-red-700 text-white py-3 px-4 rounded-lg transition duration-200">‡∏•‡∏ö</button>
                    <button type="submit" class="flex-1 bg-blue-600 hover:bg-blue-700 text-white py-3 px-4 rounded-lg transition duration-200">‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å</button>
                </div>
            </form>
        </div>
    </div>

    <script>
        // Firebase Configuration
        const firebaseConfig = {
            apiKey: "AIzaSyB33XCjD9Q8dO9Kgwc0A_qbsjYRth_pXoo",
            authDomain: "sarabunsr.firebaseapp.com",
            projectId: "sarabunsr",
            storageBucket: "sarabunsr.firebasestorage.app",
            messagingSenderId: "529273897510",
            appId: "1:529273897510:web:b385ee8c84d07613e09ce7",
            measurementId: "G-X0Q94NBCCN"
        };

        // Initialize Firebase
        firebase.initializeApp(firebaseConfig);
        const db = firebase.firestore();

        let documents = [];
        let currentAction = '';
        let editMode = false;
        let availableYears = [];

        // DOM Elements
        const fromSelect = document.getElementById('fromSelect');
        const fromOther = document.getElementById('fromOther');
        const toSelect = document.getElementById('toSelect');
        const toOther = document.getElementById('toOther');
        const documentForm = document.getElementById('documentForm');
        const documentPopup = document.getElementById('documentPopup');
        const passwordModal = document.getElementById('passwordModal');
        const editModal = document.getElementById('editModal');
        const historyTable = document.getElementById('historyTable');
        const yearFilter = document.getElementById('yearFilter');

        // Show/Hide other input fields
        fromSelect.addEventListener('change', function() {
            fromOther.classList.toggle('hidden', this.value !== 'other');
            if (this.value !== 'other') fromOther.value = '';
        });

        toSelect.addEventListener('change', function() {
            toOther.classList.toggle('hidden', this.value !== 'other');
            if (this.value !== 'other') toOther.value = '';
        });

        // Form submission
        documentForm.addEventListener('submit', async function(e) {
            e.preventDefault();
            
            const title = document.getElementById('title').value;
            const from = fromSelect.value === 'other' ? fromOther.value : fromSelect.value;
            const to = toSelect.value === 'other' ? toOther.value : toSelect.value;
            const requester = document.getElementById('requester').value;
            const notes = document.getElementById('notes').value;

            try {
                const currentYear = new Date().getFullYear();
                const counterDocId = `documentNumber_${currentYear}`;
                
                // Get next document number for current year
                const counterDoc = await db.collection('counters').doc(counterDocId).get();
                let nextNumber = 1;
                
                if (counterDoc.exists) {
                    nextNumber = counterDoc.data().current + 1;
                }

                const documentNumber = `‡∏®‡∏ò 04305.037/${nextNumber}`;
                const timestamp = new Date();

                // Save document
                await db.collection('documents').add({
                    documentNumber,
                    title,
                    from,
                    to,
                    requester,
                    notes,
                    timestamp,
                    number: nextNumber,
                    year: currentYear
                });

                // Update counter for current year
                await db.collection('counters').doc(counterDocId).set({
                    current: nextNumber,
                    year: currentYear
                });

                // Show popup
                showDocumentPopup(documentNumber, { title, from, to, requester, notes, timestamp });
                
                // Reset form
                documentForm.reset();
                fromOther.classList.add('hidden');
                toOther.classList.add('hidden');
                
                // Refresh history
                loadDocuments();

            } catch (error) {
                alert('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: ' + error.message);
            }
        });

        // Show document popup
        function showDocumentPopup(docNumber, details) {
            document.getElementById('documentNumber').textContent = docNumber;
            document.getElementById('documentDetails').innerHTML = `
                <div><strong>‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á:</strong> ${details.title}</div>
                <div><strong>‡∏à‡∏≤‡∏Å:</strong> ${details.from}</div>
                <div><strong>‡∏ñ‡∏∂‡∏á:</strong> ${details.to}</div>
                <div><strong>‡∏ú‡∏π‡πâ‡∏Ç‡∏≠‡πÄ‡∏•‡∏Ç:</strong> ${details.requester}</div>
                ${details.notes ? `<div><strong>‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏:</strong> ${details.notes}</div>` : ''}
                <div><strong>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà:</strong> ${details.timestamp.toLocaleDateString('th-TH')}</div>
            `;
            documentPopup.classList.remove('hidden');
            documentPopup.classList.add('flex');
        }

        // Close popup
        document.getElementById('closePopup').addEventListener('click', function() {
            documentPopup.classList.add('hidden');
            documentPopup.classList.remove('flex');
        });

        // Load documents from Firebase
        async function loadDocuments(selectedYear = null) {
            try {
                let query = db.collection('documents').orderBy('timestamp', 'desc');
                
                if (selectedYear) {
                    query = query.where('year', '==', parseInt(selectedYear));
                }
                
                const snapshot = await query.get();
                documents = [];
                const years = new Set();
                
                snapshot.forEach(doc => {
                    const data = { id: doc.id, ...doc.data() };
                    documents.push(data);
                    if (data.year) years.add(data.year);
                });

                // Update available years
                availableYears = Array.from(years).sort((a, b) => b - a);
                updateYearFilter();
                displayDocuments();
            } catch (error) {
                console.error('Error loading documents:', error);
                const colspan = editMode ? '7' : '6';
                historyTable.innerHTML = `<tr><td colspan="${colspan}" class="border border-gray-300 px-4 py-8 text-center text-red-500">‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ</td></tr>`;
            }
        }

        // Update year filter dropdown
        function updateYearFilter() {
            yearFilter.innerHTML = '<option value="">‡∏ó‡∏∏‡∏Å‡∏õ‡∏µ</option>';
            availableYears.forEach(year => {
                const option = document.createElement('option');
                option.value = year;
                option.textContent = year + 543; // Convert to Buddhist year
                yearFilter.appendChild(option);
            });
        }

        // Display documents in table
        function displayDocuments() {
            const colspan = editMode ? '7' : '6';
            
            if (documents.length === 0) {
                historyTable.innerHTML = `<tr><td colspan="${colspan}" class="border border-gray-300 px-4 py-8 text-center text-gray-500">‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</td></tr>`;
                return;
            }

            historyTable.innerHTML = documents.map(doc => `
                <tr class="hover:bg-gray-50">
                    <td class="border border-gray-300 px-4 py-3">${doc.documentNumber}</td>
                    <td class="border border-gray-300 px-4 py-3">${doc.title}</td>
                    <td class="border border-gray-300 px-4 py-3">${doc.from}</td>
                    <td class="border border-gray-300 px-4 py-3">${doc.to}</td>
                    <td class="border border-gray-300 px-4 py-3">${doc.requester}</td>
                    <td class="border border-gray-300 px-4 py-3">${doc.timestamp.toDate().toLocaleDateString('th-TH')}</td>
                    ${editMode ? `<td class="border border-gray-300 px-4 py-3">
                        <button onclick="editDocument('${doc.id}')" class="bg-blue-600 hover:bg-blue-700 text-white px-3 py-1 rounded text-sm transition duration-200">‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç</button>
                    </td>` : ''}
                </tr>
            `).join('');
        }

        // Password verification
        function verifyPassword(action) {
            currentAction = action;
            passwordModal.classList.remove('hidden');
            passwordModal.classList.add('flex');
            document.getElementById('staffPassword').focus();
        }

        // Download Excel
        document.getElementById('downloadBtn').addEventListener('click', function() {
            verifyPassword('download');
        });

        // Edit button
        document.getElementById('editBtn').addEventListener('click', function() {
            verifyPassword('edit');
        });

        // Password modal events
        document.getElementById('cancelPassword').addEventListener('click', function() {
            passwordModal.classList.add('hidden');
            passwordModal.classList.remove('flex');
            document.getElementById('staffPassword').value = '';
        });

        document.getElementById('confirmPassword').addEventListener('click', function() {
            const password = document.getElementById('staffPassword').value;
            
            if (password === '123456789') {
                passwordModal.classList.add('hidden');
                passwordModal.classList.remove('flex');
                document.getElementById('staffPassword').value = '';
                
                if (currentAction === 'download') {
                    downloadExcel();
                } else if (currentAction === 'edit') {
                    toggleEditMode();
                }
            } else {
                alert('‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á');
            }
        });

        // Download Excel function
        function downloadExcel() {
            if (documents.length === 0) {
                alert('‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î');
                return;
            }

            const excelData = documents.map(doc => ({
                '‡πÄ‡∏•‡∏Ç‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠': doc.documentNumber,
                '‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á': doc.title,
                '‡∏à‡∏≤‡∏Å': doc.from,
                '‡∏ñ‡∏∂‡∏á': doc.to,
                '‡∏ú‡∏π‡πâ‡∏Ç‡∏≠‡πÄ‡∏•‡∏Ç': doc.requester,
                '‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏': doc.notes || '',
                '‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà': doc.timestamp.toDate().toLocaleDateString('th-TH')
            }));

            const ws = XLSX.utils.json_to_sheet(excelData);
            const wb = XLSX.utils.book_new();
            XLSX.utils.book_append_sheet(wb, ws, '‡πÄ‡∏•‡∏Ç‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏≠‡∏≠‡∏Å');
            
            const fileName = `‡πÄ‡∏•‡∏Ç‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏≠‡∏≠‡∏Å_${new Date().toLocaleDateString('th-TH').replace(/\//g, '-')}.xlsx`;
            XLSX.writeFile(wb, fileName);
        }

        // Toggle edit mode
        function toggleEditMode() {
            editMode = !editMode;
            const actionColumn = document.getElementById('actionColumn');
            const editBtn = document.getElementById('editBtn');
            
            if (editMode) {
                actionColumn.classList.remove('hidden');
                editBtn.textContent = 'üîí ‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç';
                editBtn.classList.remove('bg-orange-600', 'hover:bg-orange-700');
                editBtn.classList.add('bg-red-600', 'hover:bg-red-700');
            } else {
                actionColumn.classList.add('hidden');
                editBtn.textContent = '‚úèÔ∏è ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç';
                editBtn.classList.remove('bg-red-600', 'hover:bg-red-700');
                editBtn.classList.add('bg-orange-600', 'hover:bg-orange-700');
            }
            
            displayDocuments();
        }

        // Edit document function
        function editDocument(docId) {
            const doc = documents.find(d => d.id === docId);
            if (!doc) return;

            // Fill edit form
            document.getElementById('editDocId').value = doc.id;
            document.getElementById('editDocNumber').value = doc.documentNumber;
            document.getElementById('editTitle').value = doc.title;
            document.getElementById('editRequester').value = doc.requester;
            document.getElementById('editNotes').value = doc.notes || '';

            // Handle from field
            const editFromSelect = document.getElementById('editFromSelect');
            const editFromOther = document.getElementById('editFromOther');
            if (doc.from === '‡∏ú‡∏π‡πâ‡∏≠‡∏≥‡∏ô‡∏ß‡∏¢‡∏Å‡∏≤‡∏£‡πÇ‡∏£‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏™‡∏´‡∏£‡∏≤‡∏©‡∏é‡∏£‡πå‡∏£‡∏±‡∏á‡∏™‡∏§‡∏©‡∏î‡∏¥‡πå') {
                editFromSelect.value = doc.from;
                editFromOther.classList.add('hidden');
            } else {
                editFromSelect.value = 'other';
                editFromOther.value = doc.from;
                editFromOther.classList.remove('hidden');
            }

            // Handle to field
            const editToSelect = document.getElementById('editToSelect');
            const editToOther = document.getElementById('editToOther');
            if (doc.to === '‡∏ú‡∏π‡πâ‡∏≠‡∏≥‡∏ô‡∏ß‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏≥‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡πÄ‡∏Ç‡∏ï‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡∏°‡∏±‡∏ò‡∏¢‡∏°‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡∏ô‡∏Ñ‡∏£‡∏û‡∏ô‡∏°') {
                editToSelect.value = doc.to;
                editToOther.classList.add('hidden');
            } else {
                editToSelect.value = 'other';
                editToOther.value = doc.to;
                editToOther.classList.remove('hidden');
            }

            // Show edit modal
            editModal.classList.remove('hidden');
            editModal.classList.add('flex');
        }

        // Edit form events
        document.getElementById('editFromSelect').addEventListener('change', function() {
            const editFromOther = document.getElementById('editFromOther');
            editFromOther.classList.toggle('hidden', this.value !== 'other');
            if (this.value !== 'other') editFromOther.value = '';
        });

        document.getElementById('editToSelect').addEventListener('change', function() {
            const editToOther = document.getElementById('editToOther');
            editToOther.classList.toggle('hidden', this.value !== 'other');
            if (this.value !== 'other') editToOther.value = '';
        });

        document.getElementById('cancelEdit').addEventListener('click', function() {
            editModal.classList.add('hidden');
            editModal.classList.remove('flex');
        });

        // Edit form submission
        document.getElementById('editForm').addEventListener('submit', async function(e) {
            e.preventDefault();
            
            const docId = document.getElementById('editDocId').value;
            const title = document.getElementById('editTitle').value;
            const fromSelect = document.getElementById('editFromSelect').value;
            const fromOther = document.getElementById('editFromOther').value;
            const toSelect = document.getElementById('editToSelect').value;
            const toOther = document.getElementById('editToOther').value;
            const requester = document.getElementById('editRequester').value;
            const notes = document.getElementById('editNotes').value;

            const from = fromSelect === 'other' ? fromOther : fromSelect;
            const to = toSelect === 'other' ? toOther : toSelect;

            try {
                await db.collection('documents').doc(docId).update({
                    title,
                    from,
                    to,
                    requester,
                    notes
                });

                editModal.classList.add('hidden');
                editModal.classList.remove('flex');
                loadDocuments(yearFilter.value);
                alert('‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß');
            } catch (error) {
                alert('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: ' + error.message);
            }
        });

        // Delete document
        document.getElementById('deleteDoc').addEventListener('click', async function() {
            if (!confirm('‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡∏µ‡πâ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?')) return;

            const docId = document.getElementById('editDocId').value;
            
            try {
                await db.collection('documents').doc(docId).delete();
                editModal.classList.add('hidden');
                editModal.classList.remove('flex');
                loadDocuments(yearFilter.value);
                alert('‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß');
            } catch (error) {
                alert('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: ' + error.message);
            }
        });

        // Year filter change
        yearFilter.addEventListener('change', function() {
            loadDocuments(this.value);
        });

        // Enter key for password
        document.getElementById('staffPassword').addEventListener('keypress', function(e) {
            if (e.key === 'Enter') {
                document.getElementById('confirmPassword').click();
            }
        });

        // Load documents on page load
        loadDocuments();
    </script>
<script>(function(){function c(){var b=a.contentDocument||a.contentWindow.document;if(b){var d=b.createElement('script');d.innerHTML="window.__CF$cv$params={r:'9784f72107b27b68',t:'MTc1NjczMTc4MS4wMDAwMDA='};var a=document.createElement('script');a.nonce='';a.src='/cdn-cgi/challenge-platform/scripts/jsd/main.js';document.getElementsByTagName('head')[0].appendChild(a);";b.getElementsByTagName('head')[0].appendChild(d)}}if(document.body){var a=document.createElement('iframe');a.height=1;a.width=1;a.style.position='absolute';a.style.top=0;a.style.left=0;a.style.border='none';a.style.visibility='hidden';document.body.appendChild(a);if('loading'!==document.readyState)c();else if(window.addEventListener)document.addEventListener('DOMContentLoaded',c);else{var e=document.onreadystatechange||function(){};document.onreadystatechange=function(b){e(b);'loading'!==document.readyState&&(document.onreadystatechange=e,c())}}}})();</script></body>
</html>
